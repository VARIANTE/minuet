// Â© Andrew Wei

$font-family-serif: serif !default;
$font-family-sans-serif: sans-serif !default;
$font-family-monospace: monospace !default;

$font-size-extra-small: 12px !default;
$font-size-small: 14px !default;
$font-size-medium: 18px !default;
$font-size-large: 24px !default;
$font-size-extra-large: 30px !default;

$font-weight-serif-light: 100 !default;
$font-weight-serif-normal: 300 !default;
$font-weight-serif-bold: 400 !default;
$font-weight-sans-serif-light: 100 !default;
$font-weight-sans-serif-normal: 300 !default;
$font-weight-sans-serif-bold: 400 !default;
$font-weight-monospace-light: 100 !default;
$font-weight-monospace-normal: 300 !default;
$font-weight-monospace-bold: 400 !default;

/// Gets the font family of the specified type. Minuet natively supports
/// overriding three font family types: 'serif', 'sans-serif' or 'monospace'.
///
/// @param {string} $family ['serif'] - Specify a value or pick from: 'serif',
///                                     'sans-serif', 'monospace'.
///
/// @return {font-family}
///
/// @group typography
@function get-font-family($family:'serif') {
  @if ($family == 'serif') or ($family == 's') {
    @return append($font-family-serif, null, comma);
  }
  @else if ($family == 'sans-serif') or ($family == 'ss') or ($family == 's-s') {
    @return append($font-family-sans-serif, null, comma);
  }
  @else if ($family == 'monospace') or ($family == 'm') {
    @return append($font-family-monospace, null, comma);
  }
  @else {
    @return append($family, null, comma);
  }
}

/// Gets the specified font size.
///
/// @param {string|number} $size  ['default'] - Specify a value or pick from:
///                                             'xl', 'l', 'm', 's', 'xs' or
///                                             'default'.
/// @param {number}        $scale [1]         - Specify a scale.
///
/// @return {font-size}
///
/// @group typography
@function get-font-size($size:'default', $scale:1) {
  $_size: 100%;

  @if ($size == 'x-small') or ($size == 'xs') or ($size == 'extra-small') or ($size == 'x-s') {
    $_size: $font-size-extra-small;
  } @else if ($size == 'small') or ($size == 's') {
    $_size: $font-size-small;
  } @else if ($size == 'medium') or ($size == 'm') {
    $_size: $font-size-medium;
  } @else if ($size == 'large') or ($size == 'l') {
    $_size: $font-size-large;
  } @else if ($size == 'x-large') or ($size == 'xl') or ($size == 'extra-large') or ($size == 'x-l') {
    $_size: $font-size-extra-large;
  } @else if (type-of($size) == number) {
    $_size: $size;
  }

  $_unit: unit($_size);
  $_value: strip-unit($_size);
  @return to-em(to-unit($_value, $_unit));
}

/// Gets the font weight of the specified type. Minuet natively supports
/// overriding three font weights for each font family types. The weights are
/// 'light', 'normal' and 'bold'.
///
/// @param {string|unit} $weight ['normal'] - Specify a value or pick from:
///                                           'light', 'normal' or 'bold'.
/// @param {string} $family ['serif']       - Specifies the font-family this
///                                           font weight is associated with.
/// @return {font-weight}
///
/// @group typography
@function get-font-weight($weight:'normal', $family:'serif') {
  @if ($family == 'serif') or ($family == 's') {
    @if ($weight == 'light') or ($weight == 'l') {
      @return $font-weight-serif-light;
    }
    @else if ($weight == 'normal') or ($weight == 'n') {
      @return $font-weight-serif-normal;
    }
    @else if ($weight == 'bold') or ($weight == 'b') {
      @return $font-weight-serif-bold;
    }
    @else {
      @return $weight;
    }
  }
  @else if ($family == 'sans-serif') or ($family == 'ss') or ($family == 's-s') {
    @if ($weight == 'light') or ($weight == 'l') {
      @return $font-weight-sans-serif-light;
    }
    @else if ($weight == 'normal') or ($weight == 'n') {
      @return $font-weight-sans-serif-normal;
    }
    @else if ($weight == 'bold') or ($weight == 'b') {
      @return $font-weight-sans-serif-bold;
    }
    @else {
      @return $weight;
    }
  }
  @else if ($family == 'monospace') or ($family == 'm') {
    @if ($weight == 'light') or ($weight == 'l') {
      @return $font-weight-monospace-light;
    }
    @else if ($weight == 'normal') or ($weight == 'n') {
      @return $font-weight-monospace-normal;
    }
    @else if ($weight == 'bold') or ($weight == 'b') {
      @return $font-weight-monospace-bold;
    }
    @else {
      @return $weight;
    }
  }
  @else {
    @return $weight;
  }
}

/// Applies font related rules.
///
/// @param {List}   $family [null] - Font family.
/// @param {*}      $size [null]   - Font size.
/// @param {number} $weight [null] - Font weight.
///
/// @group typography
@mixin font($family:null, $size:null, $weight:null) {
  @if ($family != null) { font-family: get-font-family($family); }
  @if ($size != null) { font-size: get-font-size($size, 1); }
  @if ($weight != null) and ($family != null) { font-weight: get-font-weight($weight, $family); }
}
