// Â© Andrew Wei

// Default global font size, override this if needed.
$font-size-default: 16px !default;

// Default global font scale, override this if needed.
$font-size-scale: 100% !default;

/// Property reset for box elements.
///
/// @group resets
%box-reset {
  border: none;
  box-sizing: border-box;
  margin: 0;
  outline: none;
  padding: 0;
}

/// Property reset for text elements.
///
/// @group resets
%text-reset {
  font-weight: normal;
  line-height: normal;
  text-decoration: none;
  text-rendering: optimizeLegibility;
  text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-text-stroke: 0;
}

/// Normalizes the child elements of the containing element. Can be applied to
/// the root if specified.
///
/// @param {boolean} $is-root [false] - Specifies whether the reset applies to
///                                     the root context. 
/// 
/// @group resets
@mixin reset($is-root:false) {
  $_root: if($is-root, '@at-root', '&');

  @if ($is-root) {
    @at-root {
      html {
        @extend %box-reset;
        font-family: sans-serif;
        font-size: $font-size-default;
        height: 100%;
        width: 100%;
      }
      
      body {
        @extend %box-reset;
        font-size: $font-size-scale;
        height: 100%;
        width: 100%;
        overflow-x: hidden;
        overflow-y: auto;
      }
    }
  }
  @else {
    & {
      @extend %box-reset;
      @extend %text-reset;
      display: block;
      position: relative;
    }
  }

  #{$_root} {
    #{select-boxes()} {
      @extend %box-reset;
      @extend %text-reset;
      display: block;
      position: relative;
    }
    
    #{select-buttons()} {
      @extend %box-reset;
      @extend %text-reset;
      cursor: pointer;
      display: inline-block;
      position: relative;
    
      &:disabled,
      &[disabled] {
        cursor: default;
        pointer-events: none;
      }
    }
    
    #{select-headings()}, #{select-texts()} {
      @extend %box-reset;
      @extend %text-reset;
      list-style: none;
    }
    
    #{select-lists()} {
      @extend %box-reset;
      @extend %text-reset;
    }
    
    #{select-textfields()} {
      @extend %box-reset;
      @extend %text-reset;
      resize: none;
    
      &:focus,
      &:invalid {
        box-shadow: none;
        outline-width: 0;
      }
    
      &:-webkit-autofill {
        box-shadow: 0 0 0 1000px white inset;
      }
    }
    
    #{select-statics()} {
      @extend %box-reset;
      @extend %text-reset;
      position: static;
    }
    
    #{select-links()} {
      text-decoration: none;
      @include state('hover') {
        text-decoration: none;
      }
    }
    
    audio,
    canvas,
    progress,
    video {
      display: inline-block;
      vertical-align: baseline;
    }
    
    audio:not([controls]) {
      display: none;
      height: 0;
    }
    
    [hidden],
    template {
      display: none;
    }
    
    a {
      background-color: transparent;
    
      &:active,
      &:hover {
        outline: 0;
      }
    }
    
    abbr[title] {
      border-bottom: 1px dotted;
    }
    
    b {
      font-weight: bold;
    }
    
    dfn,
    i {
      font-style: italic;
    }
    
    mark {
      background: #ff0;
      color: #000;
    }
    
    small {
      font-size: 80%;
    }
    
    sub,
    sup {
      font-size: 75%;
      line-height: 0;
      position: relative;
      vertical-align: baseline;
    }
    
    sup {
      top: -0.5em;
    }
    
    sub {
      bottom: -0.25em;
    }
    
    svg:not(:root) {
      overflow: hidden;
    }
    
    hr {
      box-sizing: content-box;
      height: 0;
    }
    
    pre {
      overflow: auto;
    }
    
    code,
    kbd,
    pre,
    samp {
      font-family: monospace, monospace;
      font-size: 1em;
    }
    
    button,
    input,
    optgroup,
    select,
    textarea {
      @extend %box-reset;
      color: inherit;
      font: inherit;
    }
    
    button {
      overflow: visible;
    }
    
    button,
    select {
      text-transform: none;
    }
    
    button,
    html input[type='button'],
    input[type='reset'],
    input[type='submit'] {
      -webkit-appearance: button;
      cursor: pointer;
    }
    
    button[disabled],
    html input[disabled] {
      cursor: default;
    }
    
    button::-moz-focus-inner,
    input::-moz-focus-inner {
      border: 0;
      padding: 0;
    }
    
    input {
      line-height: normal;
    }
    
    input[type='checkbox'],
    input[type='radio'] {
      box-sizing: border-box;
      padding: 0;
    }
    
    input[type='number']::-webkit-inner-spin-button,
    input[type='number']::-webkit-outer-spin-button {
      height: auto;
    }
    
    input[type='search'] {
      -webkit-appearance: textfield;
      box-sizing: content-box;
    }
    
    input[type='search']::-webkit-search-cancel-button,
    input[type='search']::-webkit-search-decoration {
      -webkit-appearance: none;
    }
    
    fieldset {
      border: 1px solid #c0c0c0;
      margin: 0 2px;
      padding: 0.35em 0.625em 0.75em;
    }
    
    legend {
      border: 0;
      padding: 0;
    }
    
    textarea {
      overflow: auto;
    }
    
    optgroup {
      font-weight: bold;
    }
    
    table {
      border-collapse: collapse;
      border-spacing: 0;
    }
    
    td,
    th {
      padding: 0;
    }
    
    ::placeholder {
      color: inherit;
      opacity: 0.3;
    }
  }
}